@model Project.Models.Projects
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Tasks";
}

<div class="jumbotron bg-primary text-white">
    <div class="container">
        <h1 class="display-4">Project Tasks</h1>
        <p class="lead">Create, Review and Manage Tasks for the Project...</p>
    </div>
</div>

<h2>Tasks</h2>
<p class="text-success">@ViewBag.Message</p>
<br />

<p>Users can create tasks, and then assign them to users. Tasks can be modified and assigned to the complete card by clicking the edit button on the task of your choice.</p>

@if (!Model.ProjectUsers.Any(p => p.ApplicationUserID == User.Identity.GetUserId()) && User.Identity.GetUserId() != null && !Model.ProjectUserRequests.Any(p => p.ApplicationUserID == User.Identity.GetUserId()))
{
    <h2>Request project membership</h2>
    using (Html.BeginForm("RequestMembership", "ProjectUserRequests", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <input type="hidden" value="@Model.PublicID" name="projectID" />
        <input type="hidden" value="@User.Identity.GetUserId()" name="userID" />
        <input type="submit" class="btn btn-success" value="Submit Request" />
        <br />
    }

}

@if (Model.ProjectUserRequests.Any(p => p.ApplicationUserID == User.Identity.GetUserId()))
{
    <h2>Your request has been sent and is currently being verified.</h2>
}

<div class="card text-center">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a class="nav-link" href="@Url.Action("WorkStation", "Projects", new { id = Model.PublicID })">Files <span class="fas fa-file"></span> (@Model.Files.Count())</a>
            </li>
            @if (Model.ProjectUsers.Any(p => p.ApplicationUserID == User.Identity.GetUserId()))
            {
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("MyFiles", "Projects", new { id = Model.PublicID })">My Files <span class="fas fa-file"></span> (@Model.Files.Where(p => p.ApplicationUserID == User.Identity.GetUserId() && p.PublicID == Model.PublicID).Count())</a>
                </li>
            }
            <li class="nav-item">
                <a class="nav-link" href="@Url.Action("ProjectUsers", "Projects", new { id = Model.PublicID })">Users <span class="fas fa-user"></span> (@Model.ProjectUsers.Count())</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="@Url.Action("Tasks", "Projects", new { id = Model.PublicID })">Tasks <span class="fas fa-list"></span> (@Model.Tasks.Where(t => t.IsComplete == false && t.PublicID == Model.PublicID).Count())</a>
            </li>
            @if (Model.ProjectUsers.Any(p => p.ApplicationUserID == User.Identity.GetUserId()))
            {
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("MyTasks", "Projects", new { id = Model.PublicID })">My Tasks <span class="fas fa-list"></span> (@Model.Tasks.Where(t => t.IsComplete == false && t.PublicID == Model.PublicID && t.UserTasks.Any(u => u.ProjectUsers.ApplicationUserID == User.Identity.GetUserId())).Count())</a>
                </li>
            }
            <li class="nav-item">
                <a class="nav-link" href="@Url.Action("Activity", "Projects", new { id = Model.PublicID })">Activity</a>
            </li>
        </ul>
    </div>
    <div class="card-body">
        @Html.Partial("../Tasks/_ProjectTasks", Model.Tasks)
    </div>
</div>
