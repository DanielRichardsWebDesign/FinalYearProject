@model IEnumerable<Project.Models.Files>

<!--Create popover so that a preview of the Azure blob file can be seen on hovering.-->
<script>
    $(function () {
        //$('#popover').each.function();{
        //    popover("toggle", {
        //        trigger: "hover focus",
        //    });
        //};

        //$('#popover').popover({
        //    trigger: 'hover focus'
        //});

        $('.pop-over').each(function (i) {
            $(this).popover({
                trigger: "hover focus"
            });
        });
    });
</script>

<script>
    //Enable Download Selected Files Button if a checkbox is selected
    $(document).ready(function () {
        //Set submit button to disabled on page load - no files will be selected at this time
        $('#selectedFilesButton').prop('disabled', true); 

        //Disable checkboxes on startup
        //$('.selectedFiles').prop('checked', false);

        //Store selected files in an array
        var selectedFiles = [];
        console.log("Selected Files: " + selectedFiles);

        //Loop through each checkbox and add to array
        $(".selectedFiles").change(function () {
            var checked = $(this).val();
            if ($(this).is(':checked')) {
                selectedFiles.push(checked);
                console.log(selectedFiles);
            } else {
                var index = $.inArray($(this).val(), selectedFiles);
                selectedFiles.splice(index, 1);
                console.log(selectedFiles);
            }            

            //Enable button if a file is selected
            if (selectedFiles.length > 0) {
                $('#selectedFilesButton').prop('disabled', false);
            }
            //Disable if file array is empty
            else if (selectedFiles.length == 0) {
                $('#selectedFilesButton').prop('disabled', true);
            }
        });


        //console.log(filesTally);



        //$('.selectedFiles').click(function () {
        //    $('.selectedFiles').each(function() {

        //        if($(this).prop('checked') == true) {
        //        alert("File has been selected.")
        //        $('#selectedFilesButton').prop('disabled', false);
        //        filesTally += 1;
        //        console.log(filesTally);

        //        var fileName = $('.selectedFiles').val();
        //        console.log('fileName: ' + fileName);

        //        //Append a new hidden attribute to selectedFilesForm
        //        $('<input>').attr({
        //            type: 'text',
        //            name: 'selectedFilesFromForm',
        //            value: fileName
        //        }).appendTo('#selectedFilesForm');

        //    } else if ($(this).prop('checked') == false) {
        //        alert('File has not been selected.');
        //        filesTally -= 1;
        //        console.log(filesTally);

        //        if (filesTally == 0) {
        //            $('#selectedFilesButton').prop('disabled', true);
        //        }
        //    }
        //});
        //});

    });
</script>

@using (Html.BeginForm("GetSelectedFiles", "Files", FormMethod.Post, new { enctype = "multipart/form-data", id = "selectedFilesForm" }))
{
    <input type="submit" id="selectedFilesButton" value="Download Selected Files" class="btn btn-primary" />
}

<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">File Name</th>
            <th scope="col">File Type</th>
            <th scope="col">File Size</th>
            <th scope="col">Date Uploaded</th>
            <th scope="col">Uploaded by</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <input type="checkbox" class="selectedFiles" name="fileName" value="@item.FileName" />
            </td>
            <td>
                @if (item.FileType.Contains("image"))
                {
                    <a href="@Url.Action("Details", "Files", new { id = item.FileID })" tabindex="0" class="pop-over" data-trigger="hover focus" title="@item.FileName" data-html="true" data-content="'<img src='@item.FilePath' alt='@item.FileName' width='200' class='img-thumbnail' />'" data-placement="top">@Html.DisplayFor(modelItem => item.FileName)</a>
                }
                @if (item.FileType.Contains("audio"))
                {
                    <a href="@Url.Action("Details", "Files", new { id = item.FileID })" tabindex="0" class="pop-over" data-trigger="hover focus" title="@item.FileName" data-html="true" data-content="<span class='fas fa-file-audio fa-10x'></span>" data-placement="top">@Html.DisplayFor(modelItem => item.FileName)</a>

                }
                @if (item.FileType.Contains("video"))
                {
                    <a href="@Url.Action("Details", "Files", new { id = item.FileID })" tabindex="0" class="pop-over" data-trigger="hover focus" title="@item.FileName" data-html="true" data-content="<span class='fas fa-file-video fa-10x'></span>" data-placement="top">@Html.DisplayFor(modelItem => item.FileName)</a>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FileType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FileSize)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateUploaded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationUser.UserName)
            </td>
            <td>
                <a class="btn btn-primary" href="@Url.Action("Details", "Files", new { id = item.FileID })"><span class="fas fa-eye"></span></a>
                <a href="@Url.Action("DownloadFile", "Files", new { id = item.FileID })" class="btn btn-primary"><span class="fas fa-download"></span></a>
                <a class="btn btn-danger" href="@Url.Action("Delete", "Files", new { id = item.FileID })"><span class="fas fa-trash"></span></a>
            </td>
        </tr>
    }

</table>
